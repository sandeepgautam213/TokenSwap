{
  "contractName": "TokenSwap",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenABC",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_tokenXYZ",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "tokenABC",
      "outputs": [
        {
          "internalType": "contract TokenABC",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "tokenXYZ",
      "outputs": [
        {
          "internalType": "contract TokenXYZ",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_ratio",
          "type": "uint256"
        }
      ],
      "name": "setRatio",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getRatio",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_Fees",
          "type": "uint256"
        }
      ],
      "name": "setFees",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getFees",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountTKA",
          "type": "uint256"
        }
      ],
      "name": "swapTKA",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountTKX",
          "type": "uint256"
        }
      ],
      "name": "swapTKX",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyTokensABC",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyTokensXYZ",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function",
      "payable": true
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.20+commit.a1b79de6\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenABC\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenXYZ\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokensABC\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokensXYZ\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRatio\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_Fees\",\"type\":\"uint256\"}],\"name\":\"setFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_ratio\",\"type\":\"uint256\"}],\"name\":\"setRatio\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTKA\",\"type\":\"uint256\"}],\"name\":\"swapTKA\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountTKX\",\"type\":\"uint256\"}],\"name\":\"swapTKX\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenABC\",\"outputs\":[{\"internalType\":\"contract TokenABC\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenXYZ\",\"outputs\":[{\"internalType\":\"contract TokenXYZ\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/TokenSwap.sol\":\"TokenSwap\"},\"evmVersion\":\"shanghai\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"project:/contracts/TokenABC.sol\":{\"keccak256\":\"0x3fbc4f1c3e9adb84669a9308f6d724471625fd0611c5d7dec478c75dd67825a9\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e22396c40ee7302b94ecaaa3a0e91e6b841a888540b395f0ef66fb763530573f\",\"dweb:/ipfs/QmZtyqvYtvpKpQeosnjxuQaFrpvwVYszf4xRHJUZxNywXf\"]},\"project:/contracts/TokenSwap.sol\":{\"keccak256\":\"0xa36d8ed87dbd3ec95aac0b65b0c97edbda4bfc5c484fa14f0f00ba7516c4fb77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://da5f74ec9901d8cb579a00ef8ee6d9f2684fb7b13752a33695ba8dc03563fa4b\",\"dweb:/ipfs/Qmegehw1whPy3tMX3dvoYTqmXg67bVQSju1FeWiqFcaoCB\"]},\"project:/contracts/TokenXYZ.sol\":{\"keccak256\":\"0x1dd227aca0ab4bfeb3eaa63fa8b3c0ab22f90a765eeabf44c64de1a8ec0427f1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f45ed607ff959702e3882f6e1186d5fc1245038c0a5d9cbb1847951787c33c9\",\"dweb:/ipfs/Qmdq5LUc5jNScgwEYjMpJ6xEwbsGETDvR6rSxQQ9kKUmqW\"]}},\"version\":1}",
  "bytecode": "0x608060405234801562000010575f80fd5b5060405162000db138038062000db1833981016040819052620000339162000250565b5f8054336001600160a01b0319918216179091556004805482166001600160a01b0385811691821783556005805490941690851617909255604080516318160ddd60e01b8152905163095ea7b392309285926318160ddd928281019260209291908290030181865afa158015620000ac573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620000d2919062000286565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af11580156200011b573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200014191906200029e565b5060055460048054604080516318160ddd60e01b815290516001600160a01b039485169463095ea7b3943094909116926318160ddd92818301926020928290030181865afa15801562000196573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190620001bc919062000286565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af115801562000205573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906200022b91906200029e565b505050620002c6565b80516001600160a01b03811681146200024b575f80fd5b919050565b5f806040838503121562000262575f80fd5b6200026d8362000234565b91506200027d6020840162000234565b90509250929050565b5f6020828403121562000297575f80fd5b5051919050565b5f60208284031215620002af575f80fd5b81518015158114620002bf575f80fd5b9392505050565b610add80620002d45f395ff3fe60806040526004361061008f575f3560e01c8063ad20f47011610057578063ad20f4701461015b578063b2237ba31461016e578063db8d55f11461018d578063ec1ebd7a146101a1578063f62b77d7146101b5575f80fd5b80633d18678e146100935780635f70662d146100b45780637226d2c3146100f057806394e6d1a21461011d578063aaea23821461013c575b5f80fd5b34801561009e575f80fd5b506100b26100ad3660046108d6565b600355565b005b3480156100bf575f80fd5b506005546100d3906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100fb575f80fd5b5061010f61010a3660046108d6565b6101c8565b6040519081526020016100e7565b348015610128575f80fd5b5061010f6101373660046108d6565b6104f3565b348015610147575f80fd5b506004546100d3906001600160a01b031681565b6100b26101693660046108d6565b6107d9565b348015610179575f80fd5b506100b26101883660046108d6565b600155565b348015610198575f80fd5b5060035461010f565b3480156101ac575f80fd5b5060015461010f565b6100b26101c33660046108d6565b610837565b5f8082116102295760405162461bcd60e51b815260206004820152602360248201527f616d6f756e74544b41206d7573742062652067726561746572207468656e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b600480546040516370a0823160e01b8152339281019290925283916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610274573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061029891906108ed565b10156102b65760405162461bcd60e51b815260040161022090610904565b5f6102c38360015461086a565b90505f60646102d48360035461086a565b6102de9190610959565b6102e89083610978565b90505f81116103095760405162461bcd60e51b81526004016102209061098b565b6005546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561034f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037391906108ed565b116103905760405162461bcd60e51b8152600401610220906109d4565b600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd916103c391339130918a9101610a46565b6020604051808303815f875af11580156103df573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104039190610a6a565b5060055460405163095ea7b360e01b8152336004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303815f875af1158015610452573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104769190610a6a565b506005546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906104ab90309033908690600401610a46565b6020604051808303815f875af11580156104c7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104eb9190610a6a565b509392505050565b5f6001548210156105525760405162461bcd60e51b8152602060048201526024808201527f616d6f756e74544b58206d7573742062652067726561746572207468656e20726044820152636174696f60e01b6064820152608401610220565b6005546040516370a0823160e01b815233600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa158015610598573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105bc91906108ed565b10156105da5760405162461bcd60e51b815260040161022090610904565b5f600154836105e99190610959565b90505f6064600354836105fc9190610a90565b6106069190610959565b6106109083610978565b90505f81116106315760405162461bcd60e51b81526004016102209061098b565b600480546040516370a0823160e01b8152309281019290925282916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561067c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106a091906108ed565b116106bd5760405162461bcd60e51b8152600401610220906109d4565b6005546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906106f190339030908990600401610a46565b6020604051808303815f875af115801561070d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107319190610a6a565b506004805460405163095ea7b360e01b81523392810192909252602482018390526001600160a01b03169063095ea7b3906044016020604051808303815f875af1158015610781573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a59190610a6a565b50600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd916104ab9130913391879101610a46565b60048054604051631b08392760e11b81529182018390526001600160a01b031690633610724e9034906024015b5f604051808303818588803b15801561081d575f80fd5b505af115801561082f573d5f803e3d5ffd5b505050505050565b600554604051631b08392760e11b8152600481018390526001600160a01b0390911690633610724e903490602401610806565b5f81158061088d5750828261087f8183610a90565b925061088b9083610959565b145b6108d05760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b6044820152606401610220565b92915050565b5f602082840312156108e6575f80fd5b5035919050565b5f602082840312156108fd575f80fd5b5051919050565b60208082526021908201527f73656e64657220646f65736e2774206861766520656e6f75676820546f6b656e6040820152607360f81b606082015260800190565b634e487b7160e01b5f52601160045260245ffd5b5f8261097357634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156108d0576108d0610945565b60208082526029908201527f65786368616e676520416d6f756e74206d7573742062652067726561746572206040820152687468656e207a65726f60b81b606082015260800190565b6020808252604c908201527f63757272656e746c79207468652065786368616e676520646f65736e7420686160408201527f766520656e6f7567682058595a20546f6b656e732c20706c656173652072657460608201526b0e4f240d8c2e8cae440747a560a31b608082015260a00190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f60208284031215610a7a575f80fd5b81518015158114610a89575f80fd5b9392505050565b80820281158282048414176108d0576108d061094556fea26469706673582212207dd888907841e2a673c7db0ee76059510375a199960425e77b4828cea4b8914664736f6c63430008140033",
  "deployedBytecode": "0x60806040526004361061008f575f3560e01c8063ad20f47011610057578063ad20f4701461015b578063b2237ba31461016e578063db8d55f11461018d578063ec1ebd7a146101a1578063f62b77d7146101b5575f80fd5b80633d18678e146100935780635f70662d146100b45780637226d2c3146100f057806394e6d1a21461011d578063aaea23821461013c575b5f80fd5b34801561009e575f80fd5b506100b26100ad3660046108d6565b600355565b005b3480156100bf575f80fd5b506005546100d3906001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100fb575f80fd5b5061010f61010a3660046108d6565b6101c8565b6040519081526020016100e7565b348015610128575f80fd5b5061010f6101373660046108d6565b6104f3565b348015610147575f80fd5b506004546100d3906001600160a01b031681565b6100b26101693660046108d6565b6107d9565b348015610179575f80fd5b506100b26101883660046108d6565b600155565b348015610198575f80fd5b5060035461010f565b3480156101ac575f80fd5b5060015461010f565b6100b26101c33660046108d6565b610837565b5f8082116102295760405162461bcd60e51b815260206004820152602360248201527f616d6f756e74544b41206d7573742062652067726561746572207468656e207a60448201526265726f60e81b60648201526084015b60405180910390fd5b600480546040516370a0823160e01b8152339281019290925283916001600160a01b03909116906370a0823190602401602060405180830381865afa158015610274573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061029891906108ed565b10156102b65760405162461bcd60e51b815260040161022090610904565b5f6102c38360015461086a565b90505f60646102d48360035461086a565b6102de9190610959565b6102e89083610978565b90505f81116103095760405162461bcd60e51b81526004016102209061098b565b6005546040516370a0823160e01b815230600482015282916001600160a01b0316906370a0823190602401602060405180830381865afa15801561034f573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061037391906108ed565b116103905760405162461bcd60e51b8152600401610220906109d4565b600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd916103c391339130918a9101610a46565b6020604051808303815f875af11580156103df573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104039190610a6a565b5060055460405163095ea7b360e01b8152336004820152602481018390526001600160a01b039091169063095ea7b3906044016020604051808303815f875af1158015610452573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104769190610a6a565b506005546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906104ab90309033908690600401610a46565b6020604051808303815f875af11580156104c7573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906104eb9190610a6a565b509392505050565b5f6001548210156105525760405162461bcd60e51b8152602060048201526024808201527f616d6f756e74544b58206d7573742062652067726561746572207468656e20726044820152636174696f60e01b6064820152608401610220565b6005546040516370a0823160e01b815233600482015283916001600160a01b0316906370a0823190602401602060405180830381865afa158015610598573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906105bc91906108ed565b10156105da5760405162461bcd60e51b815260040161022090610904565b5f600154836105e99190610959565b90505f6064600354836105fc9190610a90565b6106069190610959565b6106109083610978565b90505f81116106315760405162461bcd60e51b81526004016102209061098b565b600480546040516370a0823160e01b8152309281019290925282916001600160a01b03909116906370a0823190602401602060405180830381865afa15801561067c573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906106a091906108ed565b116106bd5760405162461bcd60e51b8152600401610220906109d4565b6005546040516323b872dd60e01b81526001600160a01b03909116906323b872dd906106f190339030908990600401610a46565b6020604051808303815f875af115801561070d573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107319190610a6a565b506004805460405163095ea7b360e01b81523392810192909252602482018390526001600160a01b03169063095ea7b3906044016020604051808303815f875af1158015610781573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906107a59190610a6a565b50600480546040516323b872dd60e01b81526001600160a01b03909116916323b872dd916104ab9130913391879101610a46565b60048054604051631b08392760e11b81529182018390526001600160a01b031690633610724e9034906024015b5f604051808303818588803b15801561081d575f80fd5b505af115801561082f573d5f803e3d5ffd5b505050505050565b600554604051631b08392760e11b8152600481018390526001600160a01b0390911690633610724e903490602401610806565b5f81158061088d5750828261087f8183610a90565b925061088b9083610959565b145b6108d05760405162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6d756c2d6f766572666c6f7760601b6044820152606401610220565b92915050565b5f602082840312156108e6575f80fd5b5035919050565b5f602082840312156108fd575f80fd5b5051919050565b60208082526021908201527f73656e64657220646f65736e2774206861766520656e6f75676820546f6b656e6040820152607360f81b606082015260800190565b634e487b7160e01b5f52601160045260245ffd5b5f8261097357634e487b7160e01b5f52601260045260245ffd5b500490565b818103818111156108d0576108d0610945565b60208082526029908201527f65786368616e676520416d6f756e74206d7573742062652067726561746572206040820152687468656e207a65726f60b81b606082015260800190565b6020808252604c908201527f63757272656e746c79207468652065786368616e676520646f65736e7420686160408201527f766520656e6f7567682058595a20546f6b656e732c20706c656173652072657460608201526b0e4f240d8c2e8cae440747a560a31b608082015260a00190565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f60208284031215610a7a575f80fd5b81518015158114610a89575f80fd5b9392505050565b80820281158282048414176108d0576108d061094556fea26469706673582212207dd888907841e2a673c7db0ee76059510375a199960425e77b4828cea4b8914664736f6c63430008140033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:1241:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "74:117:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "84:22:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "99:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "93:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "93:13:9"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "84:5:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "169:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "178:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "181:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "171:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "171:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "171:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "128:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "139:5:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "154:3:9",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "159:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "150:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "150:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "163:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "146:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "146:19:9"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "135:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "135:31:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "125:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "125:42:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "118:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "118:50:9"
                  },
                  "nodeType": "YulIf",
                  "src": "115:70:9"
                }
              ]
            },
            "name": "abi_decode_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "53:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "64:5:9",
                "type": ""
              }
            ],
            "src": "14:177:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:195:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "340:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "349:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "352:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "342:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "342:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "342:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "315:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "324:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "311:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "311:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "336:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "307:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "307:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "304:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "365:50:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "405:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "375:29:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "375:40:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "365:6:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "424:59:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "468:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "479:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "464:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "464:18:9"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address_fromMemory",
                      "nodeType": "YulIdentifier",
                      "src": "434:29:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "434:49:9"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "424:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "252:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "263:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "275:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "283:6:9",
                "type": ""
              }
            ],
            "src": "196:293:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "575:103:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "621:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "630:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "633:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "623:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "623:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "623:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "596:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "605:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "592:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "592:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "617:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "588:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "588:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "585:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "646:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "662:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "656:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "656:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "646:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "541:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "552:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "564:6:9",
                "type": ""
              }
            ],
            "src": "494:184:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "812:145:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "822:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "834:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "845:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "830:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "830:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "822:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "864:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "879:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "895:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "900:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "891:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "891:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "904:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "887:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "887:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "875:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "875:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "857:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "857:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "857:51:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "928:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "939:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "944:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "917:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "917:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "917:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "773:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "784:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "792:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "803:4:9",
                "type": ""
              }
            ],
            "src": "683:274:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1040:199:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1086:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1095:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1098:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1088:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1088:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1088:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1061:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1070:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1057:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1057:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1082:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1053:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1053:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1050:52:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1111:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1130:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1124:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1124:16:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1115:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1193:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1202:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1205:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1195:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1195:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1195:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1162:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "1183:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1176:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1176:13:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1169:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1169:21:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "1159:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1159:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1152:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1152:40:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1149:60:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1218:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1228:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1218:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1006:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1017:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1029:6:9",
                "type": ""
              }
            ],
            "src": "962:277:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address_fromMemory(offset) -> value\n    {\n        value := mload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address_fromMemory(headStart)\n        value1 := abi_decode_address_fromMemory(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:5280:9",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:9",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:9",
                "type": ""
              }
            ],
            "src": "14:180:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "317:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "327:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "339:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "350:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "335:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "335:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "327:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "369:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "384:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "400:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "405:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "396:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "396:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "409:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "392:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "392:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "380:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "380:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "362:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "362:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "362:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_TokenXYZ_$1443__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "286:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "297:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "308:4:9",
                "type": ""
              }
            ],
            "src": "199:220:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "525:76:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "535:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "547:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "558:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "543:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "543:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "535:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "577:9:9"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "588:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "570:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "570:25:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "570:25:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "494:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "505:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "516:4:9",
                "type": ""
              }
            ],
            "src": "424:177:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "723:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "733:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "745:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "756:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "741:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "741:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "733:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "775:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "790:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "806:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "811:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "802:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "802:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "815:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "798:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "798:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "786:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "786:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "768:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "768:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "768:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_TokenABC_$930__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "692:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "703:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "714:4:9",
                "type": ""
              }
            ],
            "src": "606:219:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1004:225:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1021:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1032:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1014:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1014:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1014:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1055:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1066:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1051:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1051:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1071:2:9",
                        "type": "",
                        "value": "35"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1044:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1044:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1044:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1094:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1105:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1090:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1090:18:9"
                      },
                      {
                        "hexValue": "616d6f756e74544b41206d7573742062652067726561746572207468656e207a",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1110:34:9",
                        "type": "",
                        "value": "amountTKA must be greater then z"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1083:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1083:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1083:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1165:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1176:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1161:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1161:18:9"
                      },
                      {
                        "hexValue": "65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1181:5:9",
                        "type": "",
                        "value": "ero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1154:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1154:33:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1154:33:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1196:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1208:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1219:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1204:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1204:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1196:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_63fbb6ab0efcb54e96accf9fe8de1c91bb7f4bcb9ad26b2e1da0955452dad6bb__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "981:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "995:4:9",
                "type": ""
              }
            ],
            "src": "830:399:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1335:102:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1345:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1357:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1368:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1353:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1353:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1345:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1387:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1402:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1418:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1423:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1414:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1414:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1427:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1410:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1410:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1398:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1398:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1380:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1380:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1380:51:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1304:9:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1315:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1326:4:9",
                "type": ""
              }
            ],
            "src": "1234:203:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1523:103:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1569:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1578:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1581:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1571:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1571:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1571:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1544:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1553:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1540:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1540:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1565:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1536:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1536:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "1533:52:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1594:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1610:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1604:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1604:16:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1594:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1489:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1500:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1512:6:9",
                "type": ""
              }
            ],
            "src": "1442:184:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1805:223:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1822:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1833:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1815:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1815:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1815:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1856:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1867:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1852:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1852:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1872:2:9",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1845:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1845:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1845:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1895:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1906:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1891:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1891:18:9"
                      },
                      {
                        "hexValue": "73656e64657220646f65736e2774206861766520656e6f75676820546f6b656e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1911:34:9",
                        "type": "",
                        "value": "sender doesn't have enough Token"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1884:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1884:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1884:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1966:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1977:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1962:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1962:18:9"
                      },
                      {
                        "hexValue": "73",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "1982:3:9",
                        "type": "",
                        "value": "s"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1955:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1955:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1955:31:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1995:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2007:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2018:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2003:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2003:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1995:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_5fd109b6872bc9292dbc07972e9d2366424c44a499e846a5910a1c50b722b268__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1782:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1796:4:9",
                "type": ""
              }
            ],
            "src": "1631:397:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2065:95:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2082:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2089:3:9",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2094:10:9",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "2085:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2085:20:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2075:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2075:31:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2075:31:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2122:1:9",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2125:4:9",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2115:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2115:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2115:15:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2146:1:9",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2149:4:9",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "2139:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2139:15:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2139:15:9"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "2033:127:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2211:171:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2242:111:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2263:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2270:3:9",
                                  "type": "",
                                  "value": "224"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "2275:10:9",
                                  "type": "",
                                  "value": "0x4e487b71"
                                }
                              ],
                              "functionName": {
                                "name": "shl",
                                "nodeType": "YulIdentifier",
                                "src": "2266:3:9"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "2266:20:9"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2256:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2256:31:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2256:31:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2307:1:9",
                              "type": "",
                              "value": "4"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2310:4:9",
                              "type": "",
                              "value": "0x12"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "2300:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2300:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2300:15:9"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2335:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2338:4:9",
                              "type": "",
                              "value": "0x24"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2328:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2328:15:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2328:15:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2231:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2224:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2224:9:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2221:132:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2362:14:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2371:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2374:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "2367:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2367:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "2362:1:9"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2196:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2199:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "2205:1:9",
                "type": ""
              }
            ],
            "src": "2165:217:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2436:79:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2446:17:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2458:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "2461:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "2454:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2454:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "2446:4:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2487:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "2489:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2489:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2489:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "2478:4:9"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "2484:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2475:2:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2475:11:9"
                  },
                  "nodeType": "YulIf",
                  "src": "2472:37:9"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "2418:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "2421:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "2427:4:9",
                "type": ""
              }
            ],
            "src": "2387:128:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2694:231:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2711:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2722:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2704:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2704:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2704:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2745:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2756:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2741:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2741:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2761:2:9",
                        "type": "",
                        "value": "41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2734:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2734:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2734:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2784:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2795:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2780:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2780:18:9"
                      },
                      {
                        "hexValue": "65786368616e676520416d6f756e74206d757374206265206772656174657220",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2800:34:9",
                        "type": "",
                        "value": "exchange Amount must be greater "
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2773:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2773:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2773:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2855:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2866:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2851:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2851:18:9"
                      },
                      {
                        "hexValue": "7468656e207a65726f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "2871:11:9",
                        "type": "",
                        "value": "then zero"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2844:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2844:39:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2844:39:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2892:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2904:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2915:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2900:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2900:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2892:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_3786d68be6106da0b2265e73676a1ddb4185a04e758c2b1140ce4ad9f335a532__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2671:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2685:4:9",
                "type": ""
              }
            ],
            "src": "2520:405:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3104:306:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3121:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3132:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3114:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3114:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3114:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3155:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3166:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3151:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3151:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3171:2:9",
                        "type": "",
                        "value": "76"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3144:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3144:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3144:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3194:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3205:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3190:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3190:18:9"
                      },
                      {
                        "hexValue": "63757272656e746c79207468652065786368616e676520646f65736e74206861",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3210:34:9",
                        "type": "",
                        "value": "currently the exchange doesnt ha"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3183:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3183:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3183:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3265:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3276:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3261:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3261:18:9"
                      },
                      {
                        "hexValue": "766520656e6f7567682058595a20546f6b656e732c20706c6561736520726574",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3281:34:9",
                        "type": "",
                        "value": "ve enough XYZ Tokens, please ret"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3254:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3254:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3254:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3336:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3347:3:9",
                            "type": "",
                            "value": "128"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3332:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3332:19:9"
                      },
                      {
                        "hexValue": "7279206c61746572203a3d28",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3353:14:9",
                        "type": "",
                        "value": "ry later :=("
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3325:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3325:43:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3325:43:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3377:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3389:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3400:3:9",
                        "type": "",
                        "value": "160"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3385:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3385:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3377:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_436019d92e3050fece06a6b5b2f22cdfb3e4258b671f5fd31ed6f2f353c1a674__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3081:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3095:4:9",
                "type": ""
              }
            ],
            "src": "2930:480:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3572:218:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3582:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3594:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3605:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3590:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3590:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3582:4:9"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3617:29:9",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3635:3:9",
                            "type": "",
                            "value": "160"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3640:1:9",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "3631:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3631:11:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3644:1:9",
                        "type": "",
                        "value": "1"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "3627:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3627:19:9"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "3621:2:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3662:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3677:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3685:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3673:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3673:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3655:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3655:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3655:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3709:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3720:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3705:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3705:18:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value1",
                            "nodeType": "YulIdentifier",
                            "src": "3729:6:9"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "3737:2:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3725:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3725:15:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3698:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3698:43:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3698:43:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3761:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3772:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3757:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3757:18:9"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "3777:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3750:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3750:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3750:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3525:9:9",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "3536:6:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3544:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3552:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3563:4:9",
                "type": ""
              }
            ],
            "src": "3415:375:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3873:199:9",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3919:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3928:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3931:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3921:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3921:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3921:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3894:7:9"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3903:9:9"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3890:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3890:23:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3915:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3886:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3886:32:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3883:52:9"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3944:29:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3963:9:9"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "3957:5:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3957:16:9"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3948:5:9",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4026:16:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4035:1:9",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4038:1:9",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4028:6:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4028:12:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4028:12:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "3995:5:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "4016:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "4009:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4009:13:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4002:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4002:21:9"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "3992:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3992:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "3985:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3985:40:9"
                  },
                  "nodeType": "YulIf",
                  "src": "3982:60:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4051:15:9",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4061:5:9"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4051:6:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3839:9:9",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3850:7:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3862:6:9",
                "type": ""
              }
            ],
            "src": "3795:277:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4206:145:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4216:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4228:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4239:2:9",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4224:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4224:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4216:4:9"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4258:9:9"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4273:6:9"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4289:3:9",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4294:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4285:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4285:11:9"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4298:1:9",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4281:3:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4281:19:9"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4269:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4269:32:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4251:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4251:51:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4251:51:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4322:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4333:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4318:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4318:18:9"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "4338:6:9"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4311:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4311:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4311:34:9"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4167:9:9",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4178:6:9",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4186:6:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4197:4:9",
                "type": ""
              }
            ],
            "src": "4077:274:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4530:226:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4547:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4558:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4540:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4540:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4540:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4581:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4592:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4577:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4577:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4597:2:9",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4570:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4570:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4570:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4620:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4631:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4616:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4616:18:9"
                      },
                      {
                        "hexValue": "616d6f756e74544b58206d7573742062652067726561746572207468656e2072",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4636:34:9",
                        "type": "",
                        "value": "amountTKX must be greater then r"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4609:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4609:62:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4609:62:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4691:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4702:2:9",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4687:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4687:18:9"
                      },
                      {
                        "hexValue": "6174696f",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4707:6:9",
                        "type": "",
                        "value": "atio"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4680:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4680:34:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4680:34:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4723:27:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4735:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4746:3:9",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4731:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4731:19:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4723:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_aa9c5fd8de2380ed5442bb68ef300095c57caaa7c9191986833e2c5f90557ac0__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4507:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4521:4:9",
                "type": ""
              }
            ],
            "src": "4356:400:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4813:116:9",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4823:20:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "4838:1:9"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "4841:1:9"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "4834:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4834:9:9"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "4823:7:9"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4901:22:9",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "4903:16:9"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4903:18:9"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4903:18:9"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "4872:1:9"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "4865:6:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4865:9:9"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "4879:1:9"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "4886:7:9"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "4895:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "4882:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4882:15:9"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "4876:2:9"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4876:22:9"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "4862:2:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4862:37:9"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "4855:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4855:45:9"
                  },
                  "nodeType": "YulIf",
                  "src": "4852:71:9"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "4792:1:9",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "4795:1:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "4801:7:9",
                "type": ""
              }
            ],
            "src": "4761:168:9"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5108:170:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5125:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5136:2:9",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5118:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5118:21:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5118:21:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5159:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5170:2:9",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5155:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5155:18:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5175:2:9",
                        "type": "",
                        "value": "20"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5148:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5148:30:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5148:30:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5198:9:9"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5209:2:9",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5194:3:9"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5194:18:9"
                      },
                      {
                        "hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "5214:22:9",
                        "type": "",
                        "value": "ds-math-mul-overflow"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5187:6:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5187:50:9"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5187:50:9"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5246:26:9",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5258:9:9"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5269:2:9",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5254:3:9"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5254:18:9"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5246:4:9"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5085:9:9",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5099:4:9",
                "type": ""
              }
            ],
            "src": "4934:344:9"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_contract$_TokenXYZ_$1443__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_contract$_TokenABC_$930__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_63fbb6ab0efcb54e96accf9fe8de1c91bb7f4bcb9ad26b2e1da0955452dad6bb__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"amountTKA must be greater then z\")\n        mstore(add(headStart, 96), \"ero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_5fd109b6872bc9292dbc07972e9d2366424c44a499e846a5910a1c50b722b268__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"sender doesn't have enough Token\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_3786d68be6106da0b2265e73676a1ddb4185a04e758c2b1140ce4ad9f335a532__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 41)\n        mstore(add(headStart, 64), \"exchange Amount must be greater \")\n        mstore(add(headStart, 96), \"then zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_436019d92e3050fece06a6b5b2f22cdfb3e4258b671f5fd31ed6f2f353c1a674__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 76)\n        mstore(add(headStart, 64), \"currently the exchange doesnt ha\")\n        mstore(add(headStart, 96), \"ve enough XYZ Tokens, please ret\")\n        mstore(add(headStart, 128), \"ry later :=(\")\n        tail := add(headStart, 160)\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_aa9c5fd8de2380ed5442bb68ef300095c57caaa7c9191986833e2c5f90557ac0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"amountTKX must be greater then r\")\n        mstore(add(headStart, 96), \"atio\")\n        tail := add(headStart, 128)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"ds-math-mul-overflow\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 9,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "314:4802:7:-:0;;;560:561;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;620:5;:27;;636:10;-1:-1:-1;;;;;;620:27:7;;;;;;;657:8;:30;;;;-1:-1:-1;;;;;657:30:7;;;;;;;;697:8;:30;;;;;;;;;;;;1026:22;;;-1:-1:-1;;;1026:22:7;;;;994:16;;1019:4;;657:30;;1026:20;;:22;;;;;;;;;;;;;657:30;1026:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;994:55;;-1:-1:-1;;;;;;994:55:7;;;;;;;-1:-1:-1;;;;;875:32:9;;;994:55:7;;;857:51:9;924:18;;;917:34;830:18;;994:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1059:8:7;;1091;;;:22;;;-1:-1:-1;;;1091:22:7;;;;-1:-1:-1;;;;;1059:8:7;;;;:16;;1084:4;;1091:8;;;;:20;;:22;;;;;;;;;;;:8;:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1059:55;;-1:-1:-1;;;;;;1059:55:7;;;;;;;-1:-1:-1;;;;;875:32:9;;;1059:55:7;;;857:51:9;924:18;;;917:34;830:18;;1059:55:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;560:561;;314:4802;;14:177:9;93:13;;-1:-1:-1;;;;;135:31:9;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:293::-;275:6;283;336:2;324:9;315:7;311:23;307:32;304:52;;;352:1;349;342:12;304:52;375:40;405:9;375:40;:::i;:::-;365:50;;434:49;479:2;468:9;464:18;434:49;:::i;:::-;424:59;;196:293;;;;;:::o;494:184::-;564:6;617:2;605:9;596:7;592:23;588:32;585:52;;;633:1;630;623:12;585:52;-1:-1:-1;656:16:9;;494:184;-1:-1:-1;494:184:9:o;962:277::-;1029:6;1082:2;1070:9;1061:7;1057:23;1053:32;1050:52;;;1098:1;1095;1088:12;1050:52;1130:9;1124:16;1183:5;1176:13;1169:21;1162:5;1159:32;1149:60;;1205:1;1202;1195:12;1149:60;1228:5;962:277;-1:-1:-1;;;962:277:9:o;:::-;314:4802:7;;;;;;",
  "deployedSourceMap": "314:4802:7:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1397:78;;;;;;;;;;-1:-1:-1;1397:78:7;;;;;:::i;:::-;1456:4:::1;:12:::0;1397:78;;;529:24;;;;;;;;;;-1:-1:-1;529:24:7;;;;-1:-1:-1;;;;;529:24:7;;;;;;-1:-1:-1;;;;;380:32:9;;;362:51;;350:2;335:18;529:24:7;;;;;;;;2130:1148;;;;;;;;;;-1:-1:-1;2130:1148:7;;;;;:::i;:::-;;:::i;:::-;;;570:25:9;;;558:2;543:18;2130:1148:7;424:177:9;3284:1135:7;;;;;;;;;;-1:-1:-1;3284:1135:7;;;;;:::i;:::-;;:::i;499:24::-;;;;;;;;;;-1:-1:-1;499:24:7;;;;-1:-1:-1;;;;;499:24:7;;;4705:124;;;;;;:::i;:::-;;:::i;1210:84::-;;;;;;;;;;-1:-1:-1;1210:84:7;;;;;:::i;:::-;1181:5;1271:16;1210:84;1481:87;;;;;;;;;;-1:-1:-1;1557:4:7::1;::::0;1481:87;;1300:91;;;;;;;;;;-1:-1:-1;1181:5:7;1377:7;1300:91;;4835:124;;;;;;:::i;:::-;;:::i;2130:1148::-;2182:7;2345:1;2333:9;:13;2325:61;;;;-1:-1:-1;;;2325:61:7;;1032:2:9;2325:61:7;;;1014:21:9;1071:2;1051:18;;;1044:30;1110:34;1090:18;;;1083:62;-1:-1:-1;;;1161:18:9;;;1154:33;1204:19;;2325:61:7;;;;;;;;;2417:8;;;:30;;-1:-1:-1;;;2417:30:7;;2436:10;2417:30;;;362:51:9;;;;2451:9:7;;-1:-1:-1;;;;;2417:8:7;;;;:18;;335::9;;2417:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;2396:123;;;;-1:-1:-1;;;2396:123:7;;;;;;;:::i;:::-;2530:17;2558:23;2562:9;2573:7;;2558:3;:23::i;:::-;2530:52;;2592:22;2674:3;2650:20;2654:9;2665:4;;2650:3;:20::i;:::-;2649:28;;;;:::i;:::-;2617:61;;:9;:61;:::i;:::-;2592:86;;2726:1;2709:14;:18;2688:106;;;;-1:-1:-1;;;2688:106:7;;;;;;;:::i;:::-;2826:8;;:33;;-1:-1:-1;;;2826:33:7;;2853:4;2826:33;;;362:51:9;2862:14:7;;-1:-1:-1;;;;;2826:8:7;;:18;;335::9;;2826:33:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;2805:173;;;;-1:-1:-1;;;2805:173:7;;;;;;;:::i;:::-;2989:8;;;:59;;-1:-1:-1;;;2989:59:7;;-1:-1:-1;;;;;2989:8:7;;;;:21;;:59;;3011:10;;3031:4;;3038:9;;2989:59;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3058:8:7;;:53;;-1:-1:-1;;;3058:53:7;;3083:10;3058:53;;;4251:51:9;4318:18;;;4311:34;;;-1:-1:-1;;;;;3058:8:7;;;;:16;;4224:18:9;;3058:53:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3121:8:7;;:119;;-1:-1:-1;;;3121:119:7;;-1:-1:-1;;;;;3121:8:7;;;;:21;;:119;;3164:4;;3191:10;;3216:14;;3121:119;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3257:14:7;2130:1148;-1:-1:-1;;;2130:1148:7:o;3284:1135::-;3336:7;3515;;3502:9;:20;;3494:69;;;;-1:-1:-1;;;3494:69:7;;4558:2:9;3494:69:7;;;4540:21:9;4597:2;4577:18;;;4570:30;4636:34;4616:18;;;4609:62;-1:-1:-1;;;4687:18:9;;;4680:34;4731:19;;3494:69:7;4356:400:9;3494:69:7;3594:8;;:30;;-1:-1:-1;;;3594:30:7;;3613:10;3594:30;;;362:51:9;3628:9:7;;-1:-1:-1;;;;;3594:8:7;;:18;;335::9;;3594:30:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:43;;3573:123;;;;-1:-1:-1;;;3573:123:7;;;;;;;:::i;:::-;3707:17;3739:7;;3727:9;:19;;;;:::i;:::-;3707:39;;3756:22;3815:3;3807:4;;3795:9;:16;;;;:::i;:::-;3794:24;;;;:::i;:::-;3781:38;;:9;:38;:::i;:::-;3756:63;;3868:1;3851:14;:18;3830:106;;;;-1:-1:-1;;;3830:106:7;;;;;;;:::i;:::-;3968:8;;;:33;;-1:-1:-1;;;3968:33:7;;3995:4;3968:33;;;362:51:9;;;;4004:14:7;;-1:-1:-1;;;;;3968:8:7;;;;:18;;335::9;;3968:33:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:50;3947:173;;;;-1:-1:-1;;;3947:173:7;;;;;;;:::i;:::-;4130:8;;:59;;-1:-1:-1;;;4130:59:7;;-1:-1:-1;;;;;4130:8:7;;;;:21;;:59;;4152:10;;4172:4;;4179:9;;4130:59;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4199:8:7;;;:53;;-1:-1:-1;;;4199:53:7;;4224:10;4199:53;;;4251:51:9;;;;4318:18;;;4311:34;;;-1:-1:-1;;;;;4199:8:7;;:16;;4224:18:9;;4199:53:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;4262:8:7;;;:119;;-1:-1:-1;;;4262:119:7;;-1:-1:-1;;;;;4262:8:7;;;;:21;;:119;;4305:4;;4332:10;;4357:14;;4262:119;;:::i;4705:124::-;4778:8:::1;::::0;;:44:::1;::::0;-1:-1:-1;;;4778:44:7;;;;::::1;570:25:9::0;;;-1:-1:-1;;;;;4778:8:7::1;::::0;:18:::1;::::0;4804:9:::1;::::0;543:18:9;;4778:44:7::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;4705:124:::0;:::o;4835:::-;4908:8:::1;::::0;:44:::1;::::0;-1:-1:-1;;;4908:44:7;;::::1;::::0;::::1;570:25:9::0;;;-1:-1:-1;;;;;4908:8:7;;::::1;::::0;:18:::1;::::0;4934:9:::1;::::0;543:18:9;;4908:44:7::1;424:177:9::0;4965:149:7;5023:9;5052:6;;;:30;;-1:-1:-1;5081:1:7;5076;5067:5;5076:1;5081;5067:5;:::i;:::-;5063:9;-1:-1:-1;5062:15:7;;5063:9;5062:15;:::i;:::-;:20;5052:30;5044:63;;;;-1:-1:-1;;;5044:63:7;;5136:2:9;5044:63:7;;;5118:21:9;5175:2;5155:18;;;5148:30;-1:-1:-1;;;5194:18:9;;;5187:50;5254:18;;5044:63:7;4934:344:9;5044:63:7;4965:149;;;;:::o;14:180:9:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:9;;14:180;-1:-1:-1;14:180:9:o;1442:184::-;1512:6;1565:2;1553:9;1544:7;1540:23;1536:32;1533:52;;;1581:1;1578;1571:12;1533:52;-1:-1:-1;1604:16:9;;1442:184;-1:-1:-1;1442:184:9:o;1631:397::-;1833:2;1815:21;;;1872:2;1852:18;;;1845:30;1911:34;1906:2;1891:18;;1884:62;-1:-1:-1;;;1977:2:9;1962:18;;1955:31;2018:3;2003:19;;1631:397::o;2033:127::-;2094:10;2089:3;2085:20;2082:1;2075:31;2125:4;2122:1;2115:15;2149:4;2146:1;2139:15;2165:217;2205:1;2231;2221:132;;2275:10;2270:3;2266:20;2263:1;2256:31;2310:4;2307:1;2300:15;2338:4;2335:1;2328:15;2221:132;-1:-1:-1;2367:9:9;;2165:217::o;2387:128::-;2454:9;;;2475:11;;;2472:37;;;2489:18;;:::i;2520:405::-;2722:2;2704:21;;;2761:2;2741:18;;;2734:30;2800:34;2795:2;2780:18;;2773:62;-1:-1:-1;;;2866:2:9;2851:18;;2844:39;2915:3;2900:19;;2520:405::o;2930:480::-;3132:2;3114:21;;;3171:2;3151:18;;;3144:30;3210:34;3205:2;3190:18;;3183:62;3281:34;3276:2;3261:18;;3254:62;-1:-1:-1;;;3347:3:9;3332:19;;3325:43;3400:3;3385:19;;2930:480::o;3415:375::-;-1:-1:-1;;;;;3673:15:9;;;3655:34;;3725:15;;;;3720:2;3705:18;;3698:43;3772:2;3757:18;;3750:34;;;;3605:2;3590:18;;3415:375::o;3795:277::-;3862:6;3915:2;3903:9;3894:7;3890:23;3886:32;3883:52;;;3931:1;3928;3921:12;3883:52;3963:9;3957:16;4016:5;4009:13;4002:21;3995:5;3992:32;3982:60;;4038:1;4035;4028:12;3982:60;4061:5;3795:277;-1:-1:-1;;;3795:277:9:o;4761:168::-;4834:9;;;4865;;4882:15;;;4876:22;;4862:37;4852:71;;4903:18;;:::i",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"./TokenABC.sol\";\nimport \"./TokenXYZ.sol\";\n\n\n// this contract should be deployed after the deployment of the two contracts TokenABC and TokenXYZ\n// as instrcuted in the 2_deploy_contracts file\ncontract TokenSwap {\n    address payable admin;\n    //ratioAX is the percentage of how much TokenA is worth of TokenX\n    uint256 ratioAX;\n    bool AcheaperthenX;\n    uint256 fees;\n    TokenABC public tokenABC;\n    TokenXYZ public tokenXYZ;\n\n    constructor(address _tokenABC, address _tokenXYZ) {\n        admin = payable(msg.sender);\n        tokenABC = TokenABC(_tokenABC);\n        tokenXYZ = TokenXYZ(_tokenXYZ);\n        //due to openzeppelin implementation, transferFrom function implementation expects _msgSender() to be the beneficiary from the caller\n        // but in this use cae we are using this contract to transfer so its always checking the allowance of SELF\n        tokenABC.approve(address(this), tokenABC.totalSupply());\n        tokenXYZ.approve(address(this), tokenABC.totalSupply());\n    }\n\n    modifier onlyAdmin() {\n        payable(msg.sender) == admin;\n        _;\n    }\n\n    function setRatio(uint256 _ratio) public onlyAdmin {\n        ratioAX = _ratio;\n    }\n\n    function getRatio() public view onlyAdmin returns (uint256) {\n        return ratioAX;\n    }\n\n    function setFees(uint256 _Fees) public onlyAdmin {\n        fees = _Fees;\n    }\n\n    function getFees() public view onlyAdmin returns (uint256) {\n        return fees;\n    }\n\n    // accepts amount of TokenABC and exchenge it for TokenXYZ, vice versa with function swapTKX\n    // transfer tokensABC from sender to smart contract after the user has approved the smart contract to\n    // withdraw amount TKA from his account, this is a better solution since it is more open and gives the\n    // control to the user over what calls are transfered instead of inspecting the smart contract\n    // approve the caller to transfer one time from the smart contract address to his address\n    // transfer the exchanged TokenXYZ to the sender\n    function swapTKA(uint256 amountTKA) public returns (uint256) {\n        //check if amount given is not 0\n        // check if current contract has the necessary amout of Tokens to exchange\n        require(amountTKA > 0, \"amountTKA must be greater then zero\");\n        require(\n            tokenABC.balanceOf(msg.sender) >= amountTKA,\n            \"sender doesn't have enough Tokens\"\n        );\n\n        uint256 exchangeA = uint256(mul(amountTKA, ratioAX));\n        uint256 exchangeAmount = exchangeA -\n            uint256((mul(exchangeA, fees)) / 100);\n        require(\n            exchangeAmount > 0,\n            \"exchange Amount must be greater then zero\"\n        );\n\n        require(\n            tokenXYZ.balanceOf(address(this)) > exchangeAmount,\n            \"currently the exchange doesnt have enough XYZ Tokens, please retry later :=(\"\n        );\n\n        tokenABC.transferFrom(msg.sender, address(this), amountTKA);\n        tokenXYZ.approve(address(msg.sender), exchangeAmount);\n        tokenXYZ.transferFrom(\n            address(this),\n            address(msg.sender),\n            exchangeAmount\n        );\n        return exchangeAmount;\n    }\n\n    function swapTKX(uint256 amountTKX) public returns (uint256) {\n        //check if amount given is not 0\n        // check if current contract has the necessary amout of Tokens to exchange and the sender\n        require(amountTKX >= ratioAX, \"amountTKX must be greater then ratio\");\n        require(\n            tokenXYZ.balanceOf(msg.sender) >= amountTKX,\n            \"sender doesn't have enough Tokens\"\n        );\n\n        uint256 exchangeA = amountTKX / ratioAX;\n        uint256 exchangeAmount = exchangeA - ((exchangeA * fees) / 100);\n\n        require(\n            exchangeAmount > 0,\n            \"exchange Amount must be greater then zero\"\n        );\n\n        require(\n            tokenABC.balanceOf(address(this)) > exchangeAmount,\n            \"currently the exchange doesnt have enough XYZ Tokens, please retry later :=(\"\n        );\n        tokenXYZ.transferFrom(msg.sender, address(this), amountTKX);\n        tokenABC.approve(address(msg.sender), exchangeAmount);\n        tokenABC.transferFrom(\n            address(this),\n            address(msg.sender),\n            exchangeAmount\n        );\n        return exchangeAmount;\n    }\n\n    //leting the Admin of the TokenSwap to buyTokens manually is preferable and better then letting the contract\n    // buy automatically tokens since contracts are immutable and in case the value of some tokens beomes\n    // worthless its better to not to do any exchange at all\n    function buyTokensABC(uint256 amount) public payable onlyAdmin {\n        tokenABC.buyTokens{value: msg.value}(amount);\n    }\n\n    function buyTokensXYZ(uint256 amount) public payable onlyAdmin {\n        tokenXYZ.buyTokens{value: msg.value}(amount);\n    }\n\n    function mul(uint256 x, uint256 y) internal pure returns (uint256 z) {\n        require(y == 0 || (z = x * y) / y == x, \"ds-math-mul-overflow\");\n    }\n}",
  "sourcePath": "/Users/sandeepgautam/Desktop/tokenSwap1/contracts/TokenSwap.sol",
  "ast": {
    "absolutePath": "project:/contracts/TokenSwap.sol",
    "exportedSymbols": {
      "Context": [
        785
      ],
      "ERC20": [
        651
      ],
      "IERC20": [
        729
      ],
      "IERC20Errors": [
        41
      ],
      "IERC20Metadata": [
        755
      ],
      "TokenABC": [
        930
      ],
      "TokenSwap": [
        1335
      ],
      "TokenXYZ": [
        1443
      ]
    },
    "id": 1336,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 932,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".19"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:24:7"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "id": 933,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1336,
        "sourceUnit": 652,
        "src": "58:55:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/TokenABC.sol",
        "file": "./TokenABC.sol",
        "id": 934,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1336,
        "sourceUnit": 931,
        "src": "114:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/TokenXYZ.sol",
        "file": "./TokenXYZ.sol",
        "id": 935,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1336,
        "sourceUnit": 1444,
        "src": "139:24:7",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TokenSwap",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1335,
        "linearizedBaseContracts": [
          1335
        ],
        "name": "TokenSwap",
        "nameLocation": "323:9:7",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 937,
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "355:5:7",
            "nodeType": "VariableDeclaration",
            "scope": 1335,
            "src": "339:21:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 936,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "339:15:7",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 939,
            "mutability": "mutable",
            "name": "ratioAX",
            "nameLocation": "444:7:7",
            "nodeType": "VariableDeclaration",
            "scope": 1335,
            "src": "436:15:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 938,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "436:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 941,
            "mutability": "mutable",
            "name": "AcheaperthenX",
            "nameLocation": "462:13:7",
            "nodeType": "VariableDeclaration",
            "scope": 1335,
            "src": "457:18:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 940,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "457:4:7",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 943,
            "mutability": "mutable",
            "name": "fees",
            "nameLocation": "489:4:7",
            "nodeType": "VariableDeclaration",
            "scope": 1335,
            "src": "481:12:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 942,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "481:7:7",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "aaea2382",
            "id": 946,
            "mutability": "mutable",
            "name": "tokenABC",
            "nameLocation": "515:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1335,
            "src": "499:24:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenABC_$930",
              "typeString": "contract TokenABC"
            },
            "typeName": {
              "id": 945,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 944,
                "name": "TokenABC",
                "nameLocations": [
                  "499:8:7"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 930,
                "src": "499:8:7"
              },
              "referencedDeclaration": 930,
              "src": "499:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenABC_$930",
                "typeString": "contract TokenABC"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "5f70662d",
            "id": 949,
            "mutability": "mutable",
            "name": "tokenXYZ",
            "nameLocation": "545:8:7",
            "nodeType": "VariableDeclaration",
            "scope": 1335,
            "src": "529:24:7",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TokenXYZ_$1443",
              "typeString": "contract TokenXYZ"
            },
            "typeName": {
              "id": 948,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 947,
                "name": "TokenXYZ",
                "nameLocations": [
                  "529:8:7"
                ],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 1443,
                "src": "529:8:7"
              },
              "referencedDeclaration": 1443,
              "src": "529:8:7",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TokenXYZ_$1443",
                "typeString": "contract TokenXYZ"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 1000,
              "nodeType": "Block",
              "src": "610:511:7",
              "statements": [
                {
                  "expression": {
                    "id": 962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 956,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 937,
                      "src": "620:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 959,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "636:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "640:6:7",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "636:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "628:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 957,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "628:8:7",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "628:19:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "620:27:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 963,
                  "nodeType": "ExpressionStatement",
                  "src": "620:27:7"
                },
                {
                  "expression": {
                    "id": 968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 964,
                      "name": "tokenABC",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 946,
                      "src": "657:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenABC_$930",
                        "typeString": "contract TokenABC"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 966,
                          "name": "_tokenABC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 951,
                          "src": "677:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 965,
                        "name": "TokenABC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 930,
                        "src": "668:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenABC_$930_$",
                          "typeString": "type(contract TokenABC)"
                        }
                      },
                      "id": 967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "668:19:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenABC_$930",
                        "typeString": "contract TokenABC"
                      }
                    },
                    "src": "657:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenABC_$930",
                      "typeString": "contract TokenABC"
                    }
                  },
                  "id": 969,
                  "nodeType": "ExpressionStatement",
                  "src": "657:30:7"
                },
                {
                  "expression": {
                    "id": 974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 970,
                      "name": "tokenXYZ",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 949,
                      "src": "697:8:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenXYZ_$1443",
                        "typeString": "contract TokenXYZ"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 972,
                          "name": "_tokenXYZ",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 953,
                          "src": "717:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 971,
                        "name": "TokenXYZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1443,
                        "src": "708:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_TokenXYZ_$1443_$",
                          "typeString": "type(contract TokenXYZ)"
                        }
                      },
                      "id": 973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "708:19:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TokenXYZ_$1443",
                        "typeString": "contract TokenXYZ"
                      }
                    },
                    "src": "697:30:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TokenXYZ_$1443",
                      "typeString": "contract TokenXYZ"
                    }
                  },
                  "id": 975,
                  "nodeType": "ExpressionStatement",
                  "src": "697:30:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 981,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1019:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSwap_$1335",
                              "typeString": "contract TokenSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSwap_$1335",
                              "typeString": "contract TokenSwap"
                            }
                          ],
                          "id": 980,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1011:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 979,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1011:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1011:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 983,
                            "name": "tokenABC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "1026:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenABC_$930",
                              "typeString": "contract TokenABC"
                            }
                          },
                          "id": 984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1035:11:7",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 224,
                          "src": "1026:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1026:22:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 976,
                        "name": "tokenABC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 946,
                        "src": "994:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenABC_$930",
                          "typeString": "contract TokenABC"
                        }
                      },
                      "id": 978,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1003:7:7",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 302,
                      "src": "994:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "994:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 987,
                  "nodeType": "ExpressionStatement",
                  "src": "994:55:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 993,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "1084:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSwap_$1335",
                              "typeString": "contract TokenSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSwap_$1335",
                              "typeString": "contract TokenSwap"
                            }
                          ],
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1076:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 991,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1076:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1076:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 995,
                            "name": "tokenABC",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 946,
                            "src": "1091:8:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenABC_$930",
                              "typeString": "contract TokenABC"
                            }
                          },
                          "id": 996,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1100:11:7",
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 224,
                          "src": "1091:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1091:22:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 988,
                        "name": "tokenXYZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "1059:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenXYZ_$1443",
                          "typeString": "contract TokenXYZ"
                        }
                      },
                      "id": 990,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1068:7:7",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 302,
                      "src": "1059:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1059:55:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 999,
                  "nodeType": "ExpressionStatement",
                  "src": "1059:55:7"
                }
              ]
            },
            "id": 1001,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 951,
                  "mutability": "mutable",
                  "name": "_tokenABC",
                  "nameLocation": "580:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1001,
                  "src": "572:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "572:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 953,
                  "mutability": "mutable",
                  "name": "_tokenXYZ",
                  "nameLocation": "599:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1001,
                  "src": "591:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 952,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:7:7",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "571:38:7"
            },
            "returnParameters": {
              "id": 955,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "610:0:7"
            },
            "scope": 1335,
            "src": "560:561:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1012,
              "nodeType": "Block",
              "src": "1148:56:7",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    },
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 1005,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1166:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1006,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1170:6:7",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1166:10:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 1004,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1158:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_payable_$",
                          "typeString": "type(address payable)"
                        },
                        "typeName": {
                          "id": 1003,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1158:8:7",
                          "stateMutability": "payable",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1158:19:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 1008,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 937,
                      "src": "1181:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1158:28:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
                  "src": "1158:28:7"
                },
                {
                  "id": 1011,
                  "nodeType": "PlaceholderStatement",
                  "src": "1196:1:7"
                }
              ]
            },
            "id": 1013,
            "name": "onlyAdmin",
            "nameLocation": "1136:9:7",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 1002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1145:2:7"
            },
            "src": "1127:77:7",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1024,
              "nodeType": "Block",
              "src": "1261:33:7",
              "statements": [
                {
                  "expression": {
                    "id": 1022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1020,
                      "name": "ratioAX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 939,
                      "src": "1271:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1021,
                      "name": "_ratio",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1015,
                      "src": "1281:6:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1271:16:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1023,
                  "nodeType": "ExpressionStatement",
                  "src": "1271:16:7"
                }
              ]
            },
            "functionSelector": "b2237ba3",
            "id": 1025,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1018,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1017,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "1251:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1013,
                  "src": "1251:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1251:9:7"
              }
            ],
            "name": "setRatio",
            "nameLocation": "1219:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1016,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1015,
                  "mutability": "mutable",
                  "name": "_ratio",
                  "nameLocation": "1236:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1025,
                  "src": "1228:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1014,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1227:16:7"
            },
            "returnParameters": {
              "id": 1019,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1261:0:7"
            },
            "scope": 1335,
            "src": "1210:84:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1034,
              "nodeType": "Block",
              "src": "1360:31:7",
              "statements": [
                {
                  "expression": {
                    "id": 1032,
                    "name": "ratioAX",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 939,
                    "src": "1377:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1031,
                  "id": 1033,
                  "nodeType": "Return",
                  "src": "1370:14:7"
                }
              ]
            },
            "functionSelector": "ec1ebd7a",
            "id": 1035,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1028,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1027,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "1332:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1013,
                  "src": "1332:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1332:9:7"
              }
            ],
            "name": "getRatio",
            "nameLocation": "1309:8:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:2:7"
            },
            "returnParameters": {
              "id": 1031,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1030,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1035,
                  "src": "1351:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1029,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1351:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1350:9:7"
            },
            "scope": 1335,
            "src": "1300:91:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1046,
              "nodeType": "Block",
              "src": "1446:29:7",
              "statements": [
                {
                  "expression": {
                    "id": 1044,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1042,
                      "name": "fees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 943,
                      "src": "1456:4:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1043,
                      "name": "_Fees",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1037,
                      "src": "1463:5:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1456:12:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1045,
                  "nodeType": "ExpressionStatement",
                  "src": "1456:12:7"
                }
              ]
            },
            "functionSelector": "3d18678e",
            "id": 1047,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1040,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1039,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "1436:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1013,
                  "src": "1436:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1436:9:7"
              }
            ],
            "name": "setFees",
            "nameLocation": "1406:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1037,
                  "mutability": "mutable",
                  "name": "_Fees",
                  "nameLocation": "1422:5:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1047,
                  "src": "1414:13:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1036,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1414:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1413:15:7"
            },
            "returnParameters": {
              "id": 1041,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1446:0:7"
            },
            "scope": 1335,
            "src": "1397:78:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1056,
              "nodeType": "Block",
              "src": "1540:28:7",
              "statements": [
                {
                  "expression": {
                    "id": 1054,
                    "name": "fees",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 943,
                    "src": "1557:4:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1053,
                  "id": 1055,
                  "nodeType": "Return",
                  "src": "1550:11:7"
                }
              ]
            },
            "functionSelector": "db8d55f1",
            "id": 1057,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1050,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1049,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "1512:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1013,
                  "src": "1512:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "1512:9:7"
              }
            ],
            "name": "getFees",
            "nameLocation": "1490:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1048,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1497:2:7"
            },
            "returnParameters": {
              "id": 1053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1052,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1057,
                  "src": "1531:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1051,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1531:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1530:9:7"
            },
            "scope": 1335,
            "src": "1481:87:7",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1167,
              "nodeType": "Block",
              "src": "2191:1087:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1065,
                          "name": "amountTKA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1059,
                          "src": "2333:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1066,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2345:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2333:13:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74544b41206d7573742062652067726561746572207468656e207a65726f",
                        "id": 1068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2348:37:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63fbb6ab0efcb54e96accf9fe8de1c91bb7f4bcb9ad26b2e1da0955452dad6bb",
                          "typeString": "literal_string \"amountTKA must be greater then zero\""
                        },
                        "value": "amountTKA must be greater then zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63fbb6ab0efcb54e96accf9fe8de1c91bb7f4bcb9ad26b2e1da0955452dad6bb",
                          "typeString": "literal_string \"amountTKA must be greater then zero\""
                        }
                      ],
                      "id": 1064,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2325:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2325:61:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1070,
                  "nodeType": "ExpressionStatement",
                  "src": "2325:61:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1074,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "2436:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1075,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "2440:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "2436:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1072,
                              "name": "tokenABC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "2417:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenABC_$930",
                                "typeString": "contract TokenABC"
                              }
                            },
                            "id": 1073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2426:9:7",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 237,
                            "src": "2417:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2417:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1077,
                          "name": "amountTKA",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1059,
                          "src": "2451:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2417:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73656e64657220646f65736e2774206861766520656e6f75676820546f6b656e73",
                        "id": 1079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2474:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5fd109b6872bc9292dbc07972e9d2366424c44a499e846a5910a1c50b722b268",
                          "typeString": "literal_string \"sender doesn't have enough Tokens\""
                        },
                        "value": "sender doesn't have enough Tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5fd109b6872bc9292dbc07972e9d2366424c44a499e846a5910a1c50b722b268",
                          "typeString": "literal_string \"sender doesn't have enough Tokens\""
                        }
                      ],
                      "id": 1071,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2396:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2396:123:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1081,
                  "nodeType": "ExpressionStatement",
                  "src": "2396:123:7"
                },
                {
                  "assignments": [
                    1083
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1083,
                      "mutability": "mutable",
                      "name": "exchangeA",
                      "nameLocation": "2538:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1167,
                      "src": "2530:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1082,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2530:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1091,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1087,
                            "name": "amountTKA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1059,
                            "src": "2562:9:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 1088,
                            "name": "ratioAX",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 939,
                            "src": "2573:7:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 1086,
                          "name": "mul",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1334,
                          "src": "2558:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 1089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2558:23:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 1085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2550:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint256_$",
                        "typeString": "type(uint256)"
                      },
                      "typeName": {
                        "id": 1084,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2550:7:7",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2550:32:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2530:52:7"
                },
                {
                  "assignments": [
                    1093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1093,
                      "mutability": "mutable",
                      "name": "exchangeAmount",
                      "nameLocation": "2600:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1167,
                      "src": "2592:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1092,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2592:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1106,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1094,
                      "name": "exchangeA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1083,
                      "src": "2617:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1103,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "arguments": [
                                  {
                                    "id": 1098,
                                    "name": "exchangeA",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1083,
                                    "src": "2654:9:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1099,
                                    "name": "fees",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 943,
                                    "src": "2665:4:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1097,
                                  "name": "mul",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1334,
                                  "src": "2650:3:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                                    "typeString": "function (uint256,uint256) pure returns (uint256)"
                                  }
                                },
                                "id": 1100,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2650:20:7",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1101,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "2649:22:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1102,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2674:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "2649:28:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 1096,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2641:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint256_$",
                          "typeString": "type(uint256)"
                        },
                        "typeName": {
                          "id": 1095,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2641:7:7",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 1104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2641:37:7",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2617:61:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2592:86:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1110,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1108,
                          "name": "exchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1093,
                          "src": "2709:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1109,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2726:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2709:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786368616e676520416d6f756e74206d7573742062652067726561746572207468656e207a65726f",
                        "id": 1111,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2741:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3786d68be6106da0b2265e73676a1ddb4185a04e758c2b1140ce4ad9f335a532",
                          "typeString": "literal_string \"exchange Amount must be greater then zero\""
                        },
                        "value": "exchange Amount must be greater then zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3786d68be6106da0b2265e73676a1ddb4185a04e758c2b1140ce4ad9f335a532",
                          "typeString": "literal_string \"exchange Amount must be greater then zero\""
                        }
                      ],
                      "id": 1107,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2688:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1112,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2688:106:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1113,
                  "nodeType": "ExpressionStatement",
                  "src": "2688:106:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1119,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "2853:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1335",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1335",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 1118,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2845:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1117,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2845:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2845:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1115,
                              "name": "tokenXYZ",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 949,
                              "src": "2826:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenXYZ_$1443",
                                "typeString": "contract TokenXYZ"
                              }
                            },
                            "id": 1116,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2835:9:7",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 237,
                            "src": "2826:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2826:33:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 1122,
                          "name": "exchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1093,
                          "src": "2862:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2826:50:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63757272656e746c79207468652065786368616e676520646f65736e74206861766520656e6f7567682058595a20546f6b656e732c20706c65617365207265747279206c61746572203a3d28",
                        "id": 1124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2890:78:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_436019d92e3050fece06a6b5b2f22cdfb3e4258b671f5fd31ed6f2f353c1a674",
                          "typeString": "literal_string \"currently the exchange doesnt have enough XYZ Tokens, please retry later :=(\""
                        },
                        "value": "currently the exchange doesnt have enough XYZ Tokens, please retry later :=("
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_436019d92e3050fece06a6b5b2f22cdfb3e4258b671f5fd31ed6f2f353c1a674",
                          "typeString": "literal_string \"currently the exchange doesnt have enough XYZ Tokens, please retry later :=(\""
                        }
                      ],
                      "id": 1114,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2805:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2805:173:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1126,
                  "nodeType": "ExpressionStatement",
                  "src": "2805:173:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1130,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3011:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1131,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3015:6:7",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3011:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1134,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3031:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSwap_$1335",
                              "typeString": "contract TokenSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSwap_$1335",
                              "typeString": "contract TokenSwap"
                            }
                          ],
                          "id": 1133,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3023:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1132,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3023:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1135,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3023:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1136,
                        "name": "amountTKA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "3038:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1127,
                        "name": "tokenABC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 946,
                        "src": "2989:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenABC_$930",
                          "typeString": "contract TokenABC"
                        }
                      },
                      "id": 1129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2998:12:7",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "2989:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1137,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2989:59:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1138,
                  "nodeType": "ExpressionStatement",
                  "src": "2989:59:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1144,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3083:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1145,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3087:6:7",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3083:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1143,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3075:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1142,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3075:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1146,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3075:19:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1147,
                        "name": "exchangeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "3096:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1139,
                        "name": "tokenXYZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "3058:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenXYZ_$1443",
                          "typeString": "contract TokenXYZ"
                        }
                      },
                      "id": 1141,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3067:7:7",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 302,
                      "src": "3058:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1148,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3058:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1149,
                  "nodeType": "ExpressionStatement",
                  "src": "3058:53:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1155,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "3164:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSwap_$1335",
                              "typeString": "contract TokenSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSwap_$1335",
                              "typeString": "contract TokenSwap"
                            }
                          ],
                          "id": 1154,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3156:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1153,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3156:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3156:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1159,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3191:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3195:6:7",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3191:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1158,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3183:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1157,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3183:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3183:19:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1162,
                        "name": "exchangeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1093,
                        "src": "3216:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1150,
                        "name": "tokenXYZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "3121:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenXYZ_$1443",
                          "typeString": "contract TokenXYZ"
                        }
                      },
                      "id": 1152,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3130:12:7",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "3121:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3121:119:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1164,
                  "nodeType": "ExpressionStatement",
                  "src": "3121:119:7"
                },
                {
                  "expression": {
                    "id": 1165,
                    "name": "exchangeAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1093,
                    "src": "3257:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1063,
                  "id": 1166,
                  "nodeType": "Return",
                  "src": "3250:21:7"
                }
              ]
            },
            "functionSelector": "7226d2c3",
            "id": 1168,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapTKA",
            "nameLocation": "2139:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1060,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1059,
                  "mutability": "mutable",
                  "name": "amountTKA",
                  "nameLocation": "2155:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1168,
                  "src": "2147:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1058,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2147:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2146:19:7"
            },
            "returnParameters": {
              "id": 1063,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1062,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1168,
                  "src": "2182:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1061,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2182:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2181:9:7"
            },
            "scope": 1335,
            "src": "2130:1148:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1271,
              "nodeType": "Block",
              "src": "3345:1074:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1178,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1176,
                          "name": "amountTKX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1170,
                          "src": "3502:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1177,
                          "name": "ratioAX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 939,
                          "src": "3515:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3502:20:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "616d6f756e74544b58206d7573742062652067726561746572207468656e20726174696f",
                        "id": 1179,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3524:38:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_aa9c5fd8de2380ed5442bb68ef300095c57caaa7c9191986833e2c5f90557ac0",
                          "typeString": "literal_string \"amountTKX must be greater then ratio\""
                        },
                        "value": "amountTKX must be greater then ratio"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_aa9c5fd8de2380ed5442bb68ef300095c57caaa7c9191986833e2c5f90557ac0",
                          "typeString": "literal_string \"amountTKX must be greater then ratio\""
                        }
                      ],
                      "id": 1175,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3494:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1180,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3494:69:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1181,
                  "nodeType": "ExpressionStatement",
                  "src": "3494:69:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1189,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 1185,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967281,
                                "src": "3613:3:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 1186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "3617:6:7",
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "3613:10:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1183,
                              "name": "tokenXYZ",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 949,
                              "src": "3594:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenXYZ_$1443",
                                "typeString": "contract TokenXYZ"
                              }
                            },
                            "id": 1184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3603:9:7",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 237,
                            "src": "3594:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3594:30:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 1188,
                          "name": "amountTKX",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1170,
                          "src": "3628:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3594:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73656e64657220646f65736e2774206861766520656e6f75676820546f6b656e73",
                        "id": 1190,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3651:35:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5fd109b6872bc9292dbc07972e9d2366424c44a499e846a5910a1c50b722b268",
                          "typeString": "literal_string \"sender doesn't have enough Tokens\""
                        },
                        "value": "sender doesn't have enough Tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5fd109b6872bc9292dbc07972e9d2366424c44a499e846a5910a1c50b722b268",
                          "typeString": "literal_string \"sender doesn't have enough Tokens\""
                        }
                      ],
                      "id": 1182,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3573:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3573:123:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1192,
                  "nodeType": "ExpressionStatement",
                  "src": "3573:123:7"
                },
                {
                  "assignments": [
                    1194
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1194,
                      "mutability": "mutable",
                      "name": "exchangeA",
                      "nameLocation": "3715:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1271,
                      "src": "3707:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1193,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3707:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1198,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1195,
                      "name": "amountTKX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1170,
                      "src": "3727:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 1196,
                      "name": "ratioAX",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 939,
                      "src": "3739:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3727:19:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3707:39:7"
                },
                {
                  "assignments": [
                    1200
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1200,
                      "mutability": "mutable",
                      "name": "exchangeAmount",
                      "nameLocation": "3764:14:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 1271,
                      "src": "3756:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1199,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3756:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1210,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1201,
                      "name": "exchangeA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1194,
                      "src": "3781:9:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1207,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1204,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1202,
                                  "name": "exchangeA",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1194,
                                  "src": "3795:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "*",
                                "rightExpression": {
                                  "id": 1203,
                                  "name": "fees",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 943,
                                  "src": "3807:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3795:16:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 1205,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "3794:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "hexValue": "313030",
                            "id": 1206,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3815:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_100_by_1",
                              "typeString": "int_const 100"
                            },
                            "value": "100"
                          },
                          "src": "3794:24:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 1208,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "3793:26:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3781:38:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3756:63:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 1212,
                          "name": "exchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "3851:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 1213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3868:1:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3851:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "65786368616e676520416d6f756e74206d7573742062652067726561746572207468656e207a65726f",
                        "id": 1215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3883:43:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3786d68be6106da0b2265e73676a1ddb4185a04e758c2b1140ce4ad9f335a532",
                          "typeString": "literal_string \"exchange Amount must be greater then zero\""
                        },
                        "value": "exchange Amount must be greater then zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3786d68be6106da0b2265e73676a1ddb4185a04e758c2b1140ce4ad9f335a532",
                          "typeString": "literal_string \"exchange Amount must be greater then zero\""
                        }
                      ],
                      "id": 1211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3830:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3830:106:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1217,
                  "nodeType": "ExpressionStatement",
                  "src": "3830:106:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1227,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 1223,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967268,
                                  "src": "3995:4:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1335",
                                    "typeString": "contract TokenSwap"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_TokenSwap_$1335",
                                    "typeString": "contract TokenSwap"
                                  }
                                ],
                                "id": 1222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3987:7:7",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1221,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3987:7:7",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "nameLocations": [],
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3987:13:7",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 1219,
                              "name": "tokenABC",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 946,
                              "src": "3968:8:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_TokenABC_$930",
                                "typeString": "contract TokenABC"
                              }
                            },
                            "id": 1220,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3977:9:7",
                            "memberName": "balanceOf",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 237,
                            "src": "3968:18:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address) view external returns (uint256)"
                            }
                          },
                          "id": 1225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3968:33:7",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "id": 1226,
                          "name": "exchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1200,
                          "src": "4004:14:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3968:50:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "63757272656e746c79207468652065786368616e676520646f65736e74206861766520656e6f7567682058595a20546f6b656e732c20706c65617365207265747279206c61746572203a3d28",
                        "id": 1228,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4032:78:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_436019d92e3050fece06a6b5b2f22cdfb3e4258b671f5fd31ed6f2f353c1a674",
                          "typeString": "literal_string \"currently the exchange doesnt have enough XYZ Tokens, please retry later :=(\""
                        },
                        "value": "currently the exchange doesnt have enough XYZ Tokens, please retry later :=("
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_436019d92e3050fece06a6b5b2f22cdfb3e4258b671f5fd31ed6f2f353c1a674",
                          "typeString": "literal_string \"currently the exchange doesnt have enough XYZ Tokens, please retry later :=(\""
                        }
                      ],
                      "id": 1218,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3947:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3947:173:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1230,
                  "nodeType": "ExpressionStatement",
                  "src": "3947:173:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 1234,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "4152:3:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 1235,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4156:6:7",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4152:10:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 1238,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4172:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSwap_$1335",
                              "typeString": "contract TokenSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSwap_$1335",
                              "typeString": "contract TokenSwap"
                            }
                          ],
                          "id": 1237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4164:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1236,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4164:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1239,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4164:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1240,
                        "name": "amountTKX",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1170,
                        "src": "4179:9:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1231,
                        "name": "tokenXYZ",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 949,
                        "src": "4130:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenXYZ_$1443",
                          "typeString": "contract TokenXYZ"
                        }
                      },
                      "id": 1233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4139:12:7",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "4130:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4130:59:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1242,
                  "nodeType": "ExpressionStatement",
                  "src": "4130:59:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1248,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4224:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4228:6:7",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4224:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1247,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4216:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1246,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4216:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1250,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4216:19:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1251,
                        "name": "exchangeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "4237:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1243,
                        "name": "tokenABC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 946,
                        "src": "4199:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenABC_$930",
                          "typeString": "contract TokenABC"
                        }
                      },
                      "id": 1245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4208:7:7",
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 302,
                      "src": "4199:16:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4199:53:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1253,
                  "nodeType": "ExpressionStatement",
                  "src": "4199:53:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 1259,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967268,
                            "src": "4305:4:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TokenSwap_$1335",
                              "typeString": "contract TokenSwap"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TokenSwap_$1335",
                              "typeString": "contract TokenSwap"
                            }
                          ],
                          "id": 1258,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4297:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1257,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4297:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4297:13:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 1263,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "4332:3:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 1264,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4336:6:7",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "4332:10:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4324:7:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1261,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4324:7:7",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1265,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4324:19:7",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 1266,
                        "name": "exchangeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1200,
                        "src": "4357:14:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 1254,
                        "name": "tokenABC",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 946,
                        "src": "4262:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TokenABC_$930",
                          "typeString": "contract TokenABC"
                        }
                      },
                      "id": 1256,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "4271:12:7",
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 334,
                      "src": "4262:21:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 1267,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4262:119:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1268,
                  "nodeType": "ExpressionStatement",
                  "src": "4262:119:7"
                },
                {
                  "expression": {
                    "id": 1269,
                    "name": "exchangeAmount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 1200,
                    "src": "4398:14:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1174,
                  "id": 1270,
                  "nodeType": "Return",
                  "src": "4391:21:7"
                }
              ]
            },
            "functionSelector": "94e6d1a2",
            "id": 1272,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "swapTKX",
            "nameLocation": "3293:7:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1171,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1170,
                  "mutability": "mutable",
                  "name": "amountTKX",
                  "nameLocation": "3309:9:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "3301:17:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1169,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3301:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3300:19:7"
            },
            "returnParameters": {
              "id": 1174,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1173,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1272,
                  "src": "3336:7:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3336:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3335:9:7"
            },
            "scope": 1335,
            "src": "3284:1135:7",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1288,
              "nodeType": "Block",
              "src": "4768:61:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1285,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1274,
                        "src": "4815:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1279,
                          "name": "tokenABC",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 946,
                          "src": "4778:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenABC_$930",
                            "typeString": "contract TokenABC"
                          }
                        },
                        "id": 1281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4787:9:7",
                        "memberName": "buyTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 929,
                        "src": "4778:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 1284,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 1282,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4804:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4808:5:7",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4804:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4778:36:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 1286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4778:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1287,
                  "nodeType": "ExpressionStatement",
                  "src": "4778:44:7"
                }
              ]
            },
            "functionSelector": "ad20f470",
            "id": 1289,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1277,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1276,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "4758:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1013,
                  "src": "4758:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4758:9:7"
              }
            ],
            "name": "buyTokensABC",
            "nameLocation": "4714:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1275,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1274,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4735:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1289,
                  "src": "4727:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1273,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4727:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4726:16:7"
            },
            "returnParameters": {
              "id": 1278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4768:0:7"
            },
            "scope": 1335,
            "src": "4705:124:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1305,
              "nodeType": "Block",
              "src": "4898:61:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1302,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1291,
                        "src": "4945:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 1296,
                          "name": "tokenXYZ",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 949,
                          "src": "4908:8:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TokenXYZ_$1443",
                            "typeString": "contract TokenXYZ"
                          }
                        },
                        "id": 1298,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "4917:9:7",
                        "memberName": "buyTokens",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1442,
                        "src": "4908:18:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) payable external"
                        }
                      },
                      "id": 1301,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 1299,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "4934:3:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "4938:5:7",
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "4934:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "4908:36:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_uint256_$returns$__$value",
                        "typeString": "function (uint256) payable external"
                      }
                    },
                    "id": 1303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4908:44:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1304,
                  "nodeType": "ExpressionStatement",
                  "src": "4908:44:7"
                }
              ]
            },
            "functionSelector": "f62b77d7",
            "id": 1306,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1294,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 1293,
                  "name": "onlyAdmin",
                  "nameLocations": [
                    "4888:9:7"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 1013,
                  "src": "4888:9:7"
                },
                "nodeType": "ModifierInvocation",
                "src": "4888:9:7"
              }
            ],
            "name": "buyTokensXYZ",
            "nameLocation": "4844:12:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1292,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1291,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4865:6:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1306,
                  "src": "4857:14:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1290,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4857:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4856:16:7"
            },
            "returnParameters": {
              "id": 1295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4898:0:7"
            },
            "scope": 1335,
            "src": "4835:124:7",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1333,
              "nodeType": "Block",
              "src": "5034:80:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 1329,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1316,
                            "name": "y",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1310,
                            "src": "5052:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 1317,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5057:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5052:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1326,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "id": 1323,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 1319,
                                    "name": "z",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1313,
                                    "src": "5063:1:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1322,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1320,
                                      "name": "x",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1308,
                                      "src": "5067:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "*",
                                    "rightExpression": {
                                      "id": 1321,
                                      "name": "y",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1310,
                                      "src": "5071:1:7",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "5067:5:7",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "5063:9:7",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 1324,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "5062:11:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1325,
                              "name": "y",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1310,
                              "src": "5076:1:7",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5062:15:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 1327,
                            "name": "x",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1308,
                            "src": "5081:1:7",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5062:20:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5052:30:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
                        "id": 1330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5084:22:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
                          "typeString": "literal_string \"ds-math-mul-overflow\""
                        },
                        "value": "ds-math-mul-overflow"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
                          "typeString": "literal_string \"ds-math-mul-overflow\""
                        }
                      ],
                      "id": 1315,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5044:7:7",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1331,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5044:63:7",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1332,
                  "nodeType": "ExpressionStatement",
                  "src": "5044:63:7"
                }
              ]
            },
            "id": 1334,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mul",
            "nameLocation": "4974:3:7",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1311,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1308,
                  "mutability": "mutable",
                  "name": "x",
                  "nameLocation": "4986:1:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1334,
                  "src": "4978:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4978:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1310,
                  "mutability": "mutable",
                  "name": "y",
                  "nameLocation": "4997:1:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1334,
                  "src": "4989:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1309,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4989:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4977:22:7"
            },
            "returnParameters": {
              "id": 1314,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1313,
                  "mutability": "mutable",
                  "name": "z",
                  "nameLocation": "5031:1:7",
                  "nodeType": "VariableDeclaration",
                  "scope": 1334,
                  "src": "5023:9:7",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1312,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5023:7:7",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5022:11:7"
            },
            "scope": 1335,
            "src": "4965:149:7",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 1336,
        "src": "314:4802:7",
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "src": "32:5084:7"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.20+commit.a1b79de6.Emscripten.clang"
  },
  "networks": {
    "11155111": {
      "events": {},
      "links": {},
      "address": "0xD3fe5F87b5fd3fdc33C2245a88B7B8B841C5D0BC",
      "transactionHash": "0xc967cb8e2dac8352fa5ad8adb852264219d19c637e04bbffe1427119161898ef"
    }
  },
  "schemaVersion": "3.4.16",
  "updatedAt": "2024-02-07T20:18:38.673Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}